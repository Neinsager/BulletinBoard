<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BulletinBoard.Hosts.Api</name>
    </assembly>
    <members>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.AttachmentController">
            <summary>
            Контроллер для работы с изображениями.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AttachmentController.#ctor(BulletinBoard.Application.AppServices.Contexts.Attachments.Services.IAttachmentService,Microsoft.Extensions.Logging.ILogger{BulletinBoard.Hosts.Api.Controllers.AttachmentController},Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Инициализирует экземпляр <see cref="T:BulletinBoard.Hosts.Api.Controllers.AttachmentController"/>.
            </summary>
            <param name="attachmentService">Сервис работы с изображениями.</param>
            <param name="logger">Логирование работы с изображениями.</param>
            <param name="memoryCache">Кеширование изображений.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AttachmentController.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Возвращает список всех изображений.
            </summary>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AttachmentController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Возвращает изображение по заданному идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AttachmentController.CreateAsync(BulletinBoard.Contracts.Attachments.CreateAttachmentDto,System.Threading.CancellationToken)">
            <summary>
            Создаёт изображение.
            </summary>
            <param name="dto">Модель изображения.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AttachmentController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаляет изображение по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.AuthController">
            <summary>
            Контроллер для работы с авторизацией.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AuthController.#ctor(BulletinBoard.Application.AppServices.Authentication.Services.IAuthenticationService)">
            <summary>
            Инициализация сервиса.
            </summary>
            <param name="authService">Сервис.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AuthController.Login(BulletinBoard.Contracts.Users.AuthUserDto,System.Threading.CancellationToken)">
            <summary>
            Логин в систему.
            </summary>
            <param name="dto">Модель.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>JWT.</returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.AuthController.Register(BulletinBoard.Contracts.Users.CreateUserDto,System.Threading.CancellationToken)">
            <summary>
            Регистрация в системе.
            </summary>
            <param name="dto">Модель.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>ID созданного пользователя.</returns>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.CategoryController">
            <summary>
            Контроллер для работы с категорями.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.#ctor(BulletinBoard.Application.AppServices.Contexts.Categories.Services.ICategoryService,Microsoft.Extensions.Logging.ILogger{BulletinBoard.Hosts.Api.Controllers.CategoryController},Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Инициализирует экземпляр <see cref="T:BulletinBoard.Hosts.Api.Controllers.CategoryController"/>
            </summary>
            <param name="categoryService">Сервис для работы с категориями.</param>
            <param name="memoryCache">Кеш веб-сервера.</param>
            <param name="logger">Логгер.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Возвращает ограниченный список всех категорий.
            </summary>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Возвращает категорию по заданному идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.CreateAsync(BulletinBoard.Contracts.Categories.CreateCategoryDto,System.Threading.CancellationToken)">
            <summary>
            Создаёт категорию.
            </summary>
            <param name="dto">Модель категории.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.UpdateAsync(System.Guid,BulletinBoard.Contracts.Categories.UpdateCategoryDto,System.Threading.CancellationToken)">
            <summary>
            Редактирует категорию.
            </summary>
            <param name="id">Идентификатор категории.</param>
            <param name="dto">Модель категории.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаляет категорию по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.CommentController">
            <summary>
            Контроллер для работы с комментариями.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CommentController.#ctor(BulletinBoard.Application.AppServices.Contexts.Comments.Services.ICommentService,Microsoft.Extensions.Logging.ILogger{BulletinBoard.Hosts.Api.Controllers.CommentController},Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Инициализирует экземпляр <see cref="T:BulletinBoard.Hosts.Api.Controllers.CommentController"/> 
            </summary>
            <param name="commentService"></param>
            <param name="logger"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CommentController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Возвращает комментарий по заданному идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CommentController.CreateAsync(BulletinBoard.Contracts.Comments.CreateCommentDto,System.Threading.CancellationToken)">
            <summary>
            Создаёт комментарий.
            </summary>
            <param name="dto">Модель комментария.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CommentController.UpdateAsync(System.Guid,BulletinBoard.Contracts.Comments.UpdateCommentDto,System.Threading.CancellationToken)">
            <summary>
            Редактирует комментарий.
            </summary>
            <param name="id">Идентификатор комментария.</param>
            <param name="dto">Модель комментария.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CommentController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаляет комментарий по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns></returns>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.PostController">
            <summary>
            Контроллер для работы с объявлениями.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.#ctor(BulletinBoard.Application.AppServices.Contexts.Posts.Services.IPostService,Microsoft.Extensions.Logging.ILogger{BulletinBoard.Hosts.Api.Controllers.PostController},Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Инициализирует экзепляр <see cref="T:BulletinBoard.Hosts.Api.Controllers.PostController"/>
            </summary>
            <param name="postService">Сервис работы с объявлениями.</param>
            <param name="logger">Логирование работы с объявлениями.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получает объявление по идентификатору.
            </summary>
            <param name="id">Идентификатор объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>Модель объявления.<see cref="T:BulletinBoard.Contracts.Posts.PostDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.GetAllAsync(System.Threading.CancellationToken,System.Int32,System.Int32)">
            <summary>
            Возращает постраничные объявления.
            </summary>
            <param name="cancellationToken">Отмена операции.</param>
            <param name="pageSize">Размер страницы.</param>
            <param name="pageIndex">Индекс страницы.</param>
            <returns>Коллекция объвлений.<see cref="T:BulletinBoard.Contracts.Posts.PostDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.CreateAsync(BulletinBoard.Contracts.Posts.CreatePostDto,System.Threading.CancellationToken)">
            <summary>
            Создает объявления.
            </summary>
            <param name="dto">Модель создании объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.UpdateByIdAsync(System.Guid,BulletinBoard.Contracts.Posts.PostDto,System.Threading.CancellationToken)">
            <summary>
            Редактирует объвления.
            </summary>
            <param name="id">Идентификатор объявления.</param>
            <param name="dto">Модель редактирования объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаляет объвления по идентификатору.
            </summary>
            <param name="id">Идентификатор объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.UserController">
            <summary>
            Контроллер для работы с пользовательскими методами.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.#ctor(BulletinBoard.Application.AppServices.Contexts.Users.Services.IUserService,Microsoft.Extensions.Logging.ILogger{BulletinBoard.Hosts.Api.Controllers.UserController},Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Инициализирует экземпляр <see cref="T:BulletinBoard.Hosts.Api.Controllers.UserController"/>
            </summary>
            <param name="userService"></param>
            <param name="memoryCache"></param>
            <param name="logger"></param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Возвращает список всех пользователей.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Возвращает пользователя по заданному идентификатору.
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.GetCurrentUserAsync(System.Threading.CancellationToken)">
            <summary>
            Возвращает текущего пользователя.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.UpdateAsync(System.Guid,BulletinBoard.Contracts.Users.UpdateUserDto,System.Threading.CancellationToken)">
            <summary>
            Редактирует пользователя.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="dto">Модель.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удаляет пользователя.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.ServiceCollectionExtensions">
            <summary>
            Методы расширения для добавления сервисов.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.ServiceCollectionExtensions.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавлtние сервисов.
            </summary>
            <param name="services">Сервисы приложения.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.ServiceCollectionExtensions.AddRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавляет репозиториев.
            </summary>
            <param name="services">Сервисы приложения.</param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.ServiceCollectionExtensions.AddDbContextConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавляет контекст конфигурации БД.
            </summary>
            <param name = "services" ></param >
            <returns ></returns >
        </member>
        <member name="M:BulletinBoard.Hosts.Api.ServiceCollectionExtensions.AddMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавляет Автомаппер в DI.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.ServiceCollectionExtensions.AddAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Добавляет аутентификацию и авторизацию.
            </summary>
            <param name="services"></param>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.ServiceCollectionExtensions.AddMemoryCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавляет кэш хранящийся в памяти веб-сервера.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.SwaggerGenOptionsExtensions">
            <summary>
            Методы расширения для <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions"/>
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.SwaggerGenOptionsExtensions.AddSwaggerDoc(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Добавление документации сваггера.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.SwaggerGenOptionsExtensions.AddXmlDoc(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Добавление XML-документации элементов путём рефлексии.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.SwaggerGenOptionsExtensions.AddSecurity(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Добавление <see cref="T:Microsoft.OpenApi.Models.OpenApiSecurityScheme"/> и <see cref="T:Microsoft.OpenApi.Models.OpenApiSecurityRequirement"/> в Swagger для имплементации авторизации.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
    </members>
</doc>
